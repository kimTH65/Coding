import copy
N,M = map(int,input().split())
graph =[]
answer = N

for _ in range(N) :
    S = str(input())
    li = []
    for i in range(len(S)) :
        if S[i] == "o" :
            li.append(i+1)
    graph.append(li)

def dfs(count,visit,check_ans):
    global answer
    count += 1
    if sum(check_ans) == M:
        if answer > count:
            answer = count
        return
            
    for i in range(len(visit)):
        v = copy.deepcopy(visit)
        ch = copy.deepcopy(check_ans)
        if v[i] == 0 :
            v[i] = 1
            for g in graph[i] :
                ch[g-1] = 1
            dfs(count,v,ch)

for i in range(len(graph)) :
    visit = [0 for i in range(N)]
    check_ans = [0 for i in range(M)]
    visit[i] = 1
    
    for g in graph[i] :
        check_ans[g-1] = 1
        
    dfs(0,visit,check_ans)

print(answer)
